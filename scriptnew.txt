# Minimal Nintex Export Script
param(
    [string]$WebUrl = "https://sp.safalo.com/ConnorsWorkshop",
    [string]$ListName = "OnboardingList",
    [string]$OutputPath = "C:\Exports\NintexForms",
    [int]$StartID = 1,
    [int]$EndID = 10
)

Write-Host "Starting Nintex Forms Export..." -ForegroundColor Green
Write-Host "Web: $WebUrl"
Write-Host "List: $ListName" 
Write-Host "IDs: $StartID to $EndID"

# Create output folder
if (!(Test-Path $OutputPath)) {
    New-Item -ItemType Directory -Path $OutputPath -Force
    Write-Host "Created folder: $OutputPath"
}

# Find Chrome
$chrome = ""
if (Test-Path "C:\Program Files\Google\Chrome\Application\chrome.exe") {
    $chrome = "C:\Program Files\Google\Chrome\Application\chrome.exe"
}
elseif (Test-Path "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe") {
    $chrome = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"  
}
else {
    Write-Host "Chrome not found!" -ForegroundColor Red
    exit
}

Write-Host "Using Chrome: $chrome"

# Export each ID
$success = 0
$failed = 0

for ($id = $StartID; $id -le $EndID; $id++) {
    $url = "$WebUrl/Lists/$ListName/Item/displayifs.aspx?ID=$id"
    $pdfFile = "$OutputPath\Form_ID$id.pdf"
    
    Write-Host ""
    Write-Host "ID $id - Testing: $url" -ForegroundColor Yellow
    
    # Use Chrome to create PDF
    $args = "--headless", "--disable-gpu", "--no-sandbox", "--print-to-pdf=`"$pdfFile`"", "`"$url`""
    
    try {
        Start-Process -FilePath $chrome -ArgumentList $args -Wait -NoNewWindow
        
        if (Test-Path $pdfFile) {
            $size = (Get-Item $pdfFile).Length
            if ($size -gt 1000) {
                Write-Host "SUCCESS - $size bytes" -ForegroundColor Green
                $success++
            }
            else {
                Write-Host "FAILED - File too small" -ForegroundColor Red
                Remove-Item $pdfFile -Force
                $failed++
            }
        }
        else {
            Write-Host "FAILED - No PDF created" -ForegroundColor Red
            $failed++
        }
    }
    catch {
        Write-Host "ERROR - $($_.Exception.Message)" -ForegroundColor Red
        $failed++
    }
    
    Start-Sleep 1
}

Write-Host ""
Write-Host "=== RESULTS ===" -ForegroundColor Cyan
Write-Host "Successful: $success" -ForegroundColor Green
Write-Host "Failed: $failed" -ForegroundColor Red
Write-Host "Files saved to: $OutputPath"
Write-Host "Done!"
