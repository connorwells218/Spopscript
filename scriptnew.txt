param(
    [string]$WebUrl = "https://sp.safalo.com/ConnorsWorkshop",
    [string]$ListName = "OnboardingList", 
    [string]$OutputPath = "C:\Exports\NintexForms",
    [int]$StartID = 1,
    [int]$EndID = 10
)

Write-Host "=== Basic Nintex Forms Export ===" -ForegroundColor Green
Write-Host "Web URL: $WebUrl"
Write-Host "List Name: $ListName"
Write-Host "Output Path: $OutputPath"
Write-Host "ID Range: $StartID to $EndID"

# Create output directory
if (!(Test-Path -Path $OutputPath)) {
    New-Item -ItemType Directory -Path $OutputPath -Force | Out-Null
    Write-Host "Created output directory: $OutputPath" -ForegroundColor Green
}

# Find Chrome
$ChromePath = ""
$chromePaths = @(
    "C:\Program Files\Google\Chrome\Application\chrome.exe",
    "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
)

foreach ($path in $chromePaths) {
    if (Test-Path $path) {
        $ChromePath = $path
        Write-Host "Found Chrome at: $ChromePath" -ForegroundColor Green
        break
    }
}

if ($ChromePath -eq "") {
    Write-Host "Chrome not found! Please install Google Chrome." -ForegroundColor Red
    exit 1
}

# Test a few common URL patterns
$patterns = @(
    "$WebUrl/Lists/$ListName/Item/displayifs.aspx?ID={0}",
    "$WebUrl/Lists/OnboardingList/Item/displayifs.aspx?ID={0}",
    "$WebUrl/Lists/$ListName/DispForm.aspx?ID={0}"
)

Write-Host "`nTesting URL patterns..." -ForegroundColor Yellow

$workingPattern = $patterns[0]  # Default to first pattern

Write-Host "Using URL pattern: $workingPattern" -ForegroundColor Cyan

$successCount = 0
$failureCount = 0

for ($id = $StartID; $id -le $EndID; $id++) {
    $formUrl = $workingPattern -f $id
    $fileName = "NintexForm_ID$id.pdf"
    $outputFile = Join-Path -Path $OutputPath -ChildPath $fileName
    
    Write-Host "`nProcessing ID $id..." -ForegroundColor White
    Write-Host "URL: $formUrl" -ForegroundColor Gray
    
    # Chrome arguments for PDF export
    $chromeArgs = @(
        "--headless",
        "--disable-gpu",
        "--no-sandbox", 
        "--print-to-pdf=`"$outputFile`"",
        "`"$formUrl`""
    )
    
    try {
        # Run Chrome to generate PDF
        Start-Process -FilePath $ChromePath -ArgumentList $chromeArgs -Wait -NoNewWindow
        
        # Check if PDF was created
        if (Test-Path $outputFile) {
            $fileSize = (Get-Item $outputFile).Length
            if ($fileSize -gt 1000) {
                Write-Host "SUCCESS - PDF created ($fileSize bytes)" -ForegroundColor Green
                $successCount++
            } else {
                Write-Host "FAILED - PDF too small (likely error page)" -ForegroundColor Red
                Remove-Item $outputFile -Force -ErrorAction SilentlyContinue
                $failureCount++
            }
        } else {
            Write-Host "FAILED - No PDF created" -ForegroundColor Red
            $failureCount++
        }
    }
    catch {
        Write-Host "ERROR: $($_.Exception.Message)" -ForegroundColor Red
        $failureCount++
    }
    
    Start-Sleep -Seconds 1
}

Write-Host "`n=== SUMMARY ===" -ForegroundColor Yellow
Write-Host "Successful exports: $successCount" -ForegroundColor Green  
Write-Host "Failed exports: $failureCount" -ForegroundColor Red
Write-Host "Output directory: $OutputPath" -ForegroundColor Cyan

Write-Host "`nDone!" -ForegroundColor Green
